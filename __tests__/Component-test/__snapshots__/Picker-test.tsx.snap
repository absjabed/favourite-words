// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Picker snapshot 1`] = `
<View
  style={
    Array [
      Object {
        "alignSelf": "stretch",
      },
      undefined,
    ]
  }
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID="ios_touchable_wrapper"
  >
    <View
      pointerEvents="box-only"
    >
      <TextInput
        allowFontScaling={true}
        editable={false}
        rejectResponderTermination={true}
        style={
          Array [
            Object {
              "borderColor": "gray",
              "borderRadius": 4,
              "borderWidth": 1,
              "color": "black",
              "fontSize": 16,
              "paddingHorizontal": 10,
              "paddingRight": 30,
              "paddingVertical": 12,
              "width": "100%",
            },
            Object {},
          ]
        }
        testID="text_input"
        underlineColorAndroid="transparent"
        value="noun"
      />
      <View
        style={
          Array [
            Object {
              "position": "absolute",
              "right": 0,
            },
            undefined,
          ]
        }
        testID="icon_container"
      >
        <Icon
          name="caret-down"
          style={
            Object {
              "color": "#ffffff",
              "left": 5,
              "marginTop": 15,
            }
          }
        />
      </View>
    </View>
  </View>
  <Modal
    hardwareAccelerated={false}
    onOrientationChange={[Function]}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    testID="ios_modal"
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flex": 1,
          "opacity": 1,
        }
      }
      testID="ios_modal_top"
    />
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#f8f8f8",
            "borderTopColor": "#dedede",
            "borderTopWidth": 1,
            "flexDirection": "row",
            "height": 45,
            "justifyContent": "space-between",
            "paddingHorizontal": 10,
            "zIndex": 2,
          },
          undefined,
        ]
      }
      testID="input_accessory_view"
    >
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
            undefined,
          ]
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderColor": "#a1a1a1",
                  "borderRightWidth": 1.5,
                  "borderTopWidth": 1.5,
                  "height": 15,
                  "width": 15,
                },
                undefined,
                Object {
                  "marginLeft": 11,
                  "transform": Array [
                    Object {
                      "translateY": 4,
                    },
                    Object {
                      "rotate": "-45deg",
                    },
                  ],
                },
                undefined,
                Object {},
              ]
            }
          />
        </View>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderColor": "#a1a1a1",
                  "borderRightWidth": 1.5,
                  "borderTopWidth": 1.5,
                  "height": 15,
                  "width": 15,
                },
                undefined,
                Object {
                  "marginLeft": 22,
                  "transform": Array [
                    Object {
                      "translateY": -5,
                    },
                    Object {
                      "rotate": "135deg",
                    },
                  ],
                },
                undefined,
                Object {},
              ]
            }
          />
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 4,
            "left": 4,
            "right": 4,
            "top": 4,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="done_button"
      >
        <View
          testID="needed_for_touchable"
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#007aff",
                  "fontSize": 17,
                  "fontWeight": "600",
                  "paddingRight": 11,
                  "paddingTop": 1,
                },
                undefined,
                Object {},
              ]
            }
            testID="done_text"
          >
            Done
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#d0d4da",
            "justifyContent": "center",
          },
          Object {
            "height": 215,
          },
          undefined,
        ]
      }
    >
      <View>
        <RNCPicker
          items={
            Array [
              Object {
                "label": "Select type...",
                "testID": undefined,
                "textColor": 4278190080,
                "value": null,
              },
              Object {
                "label": "verb",
                "testID": undefined,
                "textColor": undefined,
                "value": "verb",
              },
              Object {
                "label": "noun",
                "testID": undefined,
                "textColor": undefined,
                "value": "noun",
              },
              Object {
                "label": "adverb",
                "testID": undefined,
                "textColor": undefined,
                "value": "adverb",
              },
            ]
          }
          onChange={[Function]}
          selectedIndex={2}
          style={
            Array [
              Object {
                "height": 216,
              },
              undefined,
            ]
          }
          testID="ios_picker"
        />
      </View>
    </View>
  </Modal>
</View>
`;
